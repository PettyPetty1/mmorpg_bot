
from __future__ import annotations
from typing import Protocol, Optional, Any, runtime_checkable
@runtime_checkable
class Startable(Protocol):
    def start(self) -> None: ...
    def stop(self) -> None: ...
@runtime_checkable
class ScreenRecorder(Protocol):
    def configure(self, region: Optional[dict], fps: int) -> None: ...
    def start(self) -> None: ...
    def read(self) -> Optional[Any]: ...
    def stop(self) -> None: ...
@runtime_checkable
class EventWriter(Protocol):
    def open(self, target_path) -> None: ...
    def write(self, event) -> None: ...
    def close(self) -> None: ...
